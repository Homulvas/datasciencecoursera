c[!not]
c
complete.cases(c)
c
complete.cases(c)
c[complete.cases(c)]
c[complete.cases(c), ]
c[complete.cases(c), ][1]
sum(c[complete.cases(c), ][1])
average(c[complete.cases(c), ][1])
mean(c[complete.cases(c), ][1])
rbinf(c[complete.cases(c), ][1])
rbind(c[complete.cases(c), ][1])
cbind(c[complete.cases(c), ][1])
vector(c[complete.cases(c), ][1])
lel = c(41, 36, 12, 18, 23, 19, 8, 16, 11, 14, 18, 14, 34, 6, 30, 11, 1, 11, 4, 32, 23, 45, 115, 37, 29, 71, 39, 23, 21, 37, 20, 12, 13, 135, 49, 32, 64, 40, 77, 97, 97, 85, 10, 27, 7, 48, 35, 61, 79, 63, 16, 80, 108, 20, 52, 82, 50, 64, 59, 39, 9, 16, 122, 89, 110, 44, 28, 65, 22, 59, 23, 31, 44, 21, 9, 45, 168, 73, 76, 118, 84, 85, 96, 78, 73, 91, 47, 32, 20, 23, 21, 24, 44, 21, 28, 9, 13, 46, 18, 13, 24, 16, 13, 23, 36, 7, 14, 30, 14, 18, 20)
lel
mean(lel)
c
c%Ozone
c["Ozone">31]
c[["Ozone">31]]
c["Ozone">31]
c["Ozone"==31]
c["Ozone"=31]
c["Ozone">31]
c["Ozone">31, ]
c$Ozone
c[Ozone>31]
c["Ozone">31]
c[["Ozone">31]]
c[["Ozone">30.1]]
c[["Ozone">300.1]]
c["Ozone">31]
c["Ozone">310]
c["Ozone">=310]
c["Ozone">31]
c
c[31 < "Ozone"]
con = "Ozone" > 31
c[con]
c[con,]
c[,con,]
c[,con]
c[ ,con]
c[1, ]
c[ ,1 ]
c[ ,1]>31
c*c[ ,1]>31
c[c[ ,1]>31]
c[c[ ,1]>31, ]
mean(c[complete.cases(c), ][1])
vector(c[complete.cases(c), ][1])
c[complete.cases(c), ]
c[complete.cases(c), ]
c[c[complete.cases(c), ][1, ] , ]
c[c[complete.cases(c), ][ ,1] , ]
c[c[complete.cases(c), ][ ,1] > 31 , ]
c[complete.cases(c), ]
c[complete.cases(c), ][ ,1]
c[complete.cases(c), ][ ,1]>31
c[c[complete.cases(c), ][ ,1]>31]
c[c[complete.cases(c), ][ ,1]>31, ]
c[c[complete.cases(c), ][ ,1]>31]
c[complete.cases(c), ][ ,1]>31
lel = c[complete.cases(c), ][ ,1]>31
c[lel, ]
c[complete.cases(c), ][ ,1][c[complete.cases(c), ][ ,1]>31, ]
c[complete.cases(c), ][c[complete.cases(c), ][ ,1]>31, ]
ozon = c[complete.cases(c), ][c[complete.cases(c), ][ ,1]>31, ]
ozon
c[complete.cases(c), ][c[complete.cases(c), ][ ,1]>31, ]
c[ozon, ][ ,4]>90
c[ozon, ][ ,4]
c[ozon, ][ ,4]
ozon
c[ozon, ][c[ozon, ][ ,1]>31, ]
c[ozon, ][ozon[ozon, ][ ,1]>31, ]
ozon[ozon, ][ozon[ozon, ][ ,1]>31, ]
ozon[ozon[ ,1]>31, ]
ozon[ozon[ ,4]>90, ]
rr =ozon[ozon[ ,4]>90, ]
rr
rr[rr[2]]
rr[rr[2, ]]
[rr[2, ]
rr[2, ]
rr[, 2]
mean(rr[, 2])
ozon[ozon[ ,4]>90, ]
c[c[ ,5]=6, ]
c[c[ ,5]===6, ]
c[c[ ,5]==6, ]
c[c[ ,5]==6, ][ ,5]
c[c[ ,5]==6, ][ ,4]
mean(c[c[ ,5]==6, ][ ,4])
c[c[ ,5]==5, ][ ,4]
c[c[ ,5]==5, ]
x <- list(2, "a", "b", TRUE)
x[[1]]
x[[2]]
type(x)
class(x)
class(x[[1]])
x <- c(4, "a", TRUE)
class(x)
x <- c(1,3, 5)
cbind(x,x)
class(x)
1:4+2
library(swirl)
install.packages("swirl")
library(swirl)
install.packages("swirl")
library(swirl)
R.version.string
install.packages("swirl")
library(swirl)
ls()
rm(list=ls())
library(swirl)
swirl()
5 + 7
x = 5 + 7
x <- 5 + 7
x
y = x - 3
y <- x - 3
y
z <= c(1.1, 9, 3.14)
z <- c(1.1, 9, 3.14)
c
?c
z
c(z, 555, z)
z * 2 + 100
abs(5.3)
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + (c0, 10)
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10. 100)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
library(swift)
library(swirl)
swirl()
1:20
pi:10
15:1
?':'
seq(1, 20)
seq(1, 0, by=0.5)
seq(0, 10, by=0.5)
seq(5, 10, length=30)
my_seq <= seq(5, 10, length=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Ignas")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"). sep = "")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
library(swirl)
swirl
swirl()
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
name(vect2) <- c("foo", "bar", "norf")
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, nrow = 5)
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
patients
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
View(my_matrix)
play()
View(my_matrix)
View(my_matrix)
nxt()
class(my_data)
cname <- c("patient", "age", "weight", "bp", "rating", "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
! 5 == 7
F & F
FALSE & FALSE
FALSE & TRUE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE) && 4 > 3.9
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 ==6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
length(unique_vals)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
add2 <- function(x, y) {
x+y
}
add2(3,5)
above10 <- function(x) {
use <- x > 10
x[use]
}
above10(c(11, 2, 365, 10))
above(c(11, 2, 365, 10))
above <- function(x, n = 10) {
use <- x > n
x[use]
}
above(c(11, 2, 365, 10))
above(c(11, 2, 365, 10), )
above(c(11, 2, 365, 10), 11)
x <- 1:10
if(x > 5) {
x <- 0
}
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
load("/media/Documents/Coursera/datasciencecoursera/HelloWorld.md")
library(datasets)
data(iris)
?iris
iris
iris$Species
sapply(iris, mean)
mapply(iris, mean)
mapply(iris$Sepal.Length, mean)
iris$Sepal.Length
mean(iris$Sepal.Length)
?tapply
tapply(iris$Sepal.Length, iris$Species, mean)
colMeans(iris)
rowMeans(iris[, 1:4])
apply(iris[, 1:4], 2, mean)
apply(iris, 2, mean)
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4],  mean)
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 3, mean)
apply(iris[, 1:4], 2, mean)
data(mtcars)
head(mtcars)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
split(mtcars$mpg, mtcars$cyl)
split(mtcars$mpg, mtcars$gear)
lapply(mtcars, mean)
split(mtcars$hp, mtcars$cyl)
sapply(split(mtcars$hp, mtcars$cyl), mean)
209.21429-82.63636
debug(ls)
ls
ls
ls()
exit
quit
debug()
quit()
exit()
ls()
ls()
..
A <- c(1, 2, 3, 0, 4, 5, 1, 0, 6)
A
A.nrow=3
A
A.ncol=3
A
A = matrix(c(1, 2, 3, 0, 4, 5, 1, 0, 6), nrow = 3, ncol = 3)
A
A = matrix(c(1, 2, 3, 0, 4, 5, 1, 0, 6), nrow = 3, ncol = 3, byrow=TRUE)
A
solve(A)
i <<- NULL
source('/media/Documents/Coursera/ProgrammingAssignment2/cachematrix.R')
B <- makeCacheMatrix(A)
B
A
B$get
()
B$get()
B$getsolve()
ans <- solve(A)
ans
B$setsolve(ans)
B$getsolve()
debugSource('/media/Documents/Coursera/ProgrammingAssignment2/cachematrix.R')
B <- makeCacheMatrix(A)
a
B <- makeCacheMatrix(A)
B <- makeCacheMatrix(A)
B
B.get()
B$get()
B$getinverse()
B$setinverse(2)
B$getinverse(2)
B$getinverse()
source('/media/Documents/Coursera/ProgrammingAssignment2/cachematrix.R')
cacheSolve(A)
source('/media/Documents/Coursera/ProgrammingAssignment2/cachematrix.R')
cacheSolve(A)
cacheSolve(B)
cacheSolve(B)
B.setinverse(NULL)
B$setinverse(NULL)
cacheSolve(B)
cacheSolve(B)
B
?B
info(B)
about(B)
B
source('/media/Documents/Coursera/datasciencecoursera/cachemean.R')
source('/media/Documents/Coursera/datasciencecoursera/cachemean.R')
source('/media/Documents/Coursera/datasciencecoursera/makeVector.R')
c(1, 2 ,3)
aa = c(1, 2 ,3)
aa
cachemean(aa)
cachemean(makeVector(aa))
cachematrix(makeCacheMatrix(A))
cacheSolve(makeCacheMatrix(A))
cacheSolve(makeCacheMatrix(A))
ddd = makeCacheMatrix(A)
ddd
cacheSolve(ddd)
cacheSolve(ddd)
ddd$set(A)
cacheSolve(ddd)
cacheSolve(ddd)
set.seed(1)
rpois(5, 2)
rnorm(4)
rbinom(4)
rbinom()
rbinom(2)
rbinom(2,2)
rbinom(2,2,5)
rbinom(2,2,0.3)
rbinom(2,20,0.3)
rbinom(20,1,0.3)
rbinom(20,1,0.3)
?rbinom
?qpois
setwd("/media/Documents/Coursera/datasciencecoursera/rprog-data-ProgAssignment3-data")
head(rankall("heart attack", 20), 10)
source('/media/Documents/Coursera/datasciencecoursera/rprog-data-ProgAssignment3-data/rankall.R')
head(rankall("heart attack", 20), 10)
ans <- data.frame(hospital=character(),
state=character(),
stringsAsFactors=FALSE)
ans
ans[ans$hospital, 1] <- 1
ans[ans$hospital, 1] <- "a"
ans[1, 1] <- "a"
ans[ans$hospital, 1] <- "a"
ans
ans[ans$hospital, 1] <- "a"
ans <- data.frame(hospital=character(),
state=character(),
stringsAsFactors=FALSE)
ans
ans[ans$hospital, 1] <- "a"
ans$hospital[1] <- "a"
ans$hospital[1] <- "a"
ans["a", ] <- c("aa", "dd")
ans
source('/media/Documents/Coursera/datasciencecoursera/rprog-data-ProgAssignment3-data/rankall.R')
head(rankall("heart attack", 20), 10)
warnings()
source('/media/Documents/Coursera/datasciencecoursera/rprog-data-ProgAssignment3-data/rankall.R')
warnings()
warnings()
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", "best"), 10)
source('/media/Documents/Coursera/datasciencecoursera/rprog-data-ProgAssignment3-data/rankall.R')
head(rankall("heart attack", "best"), 10)
source('/media/Documents/Coursera/datasciencecoursera/rprog-data-ProgAssignment3-data/rankall.R')
head(rankall("heart attack", "best"), 10)
source('/media/Documents/Coursera/datasciencecoursera/rprog-data-ProgAssignment3-data/rankall.R')
head(rankall("heart attack", "best"), 10)
source('/media/Documents/Coursera/datasciencecoursera/rprog-data-ProgAssignment3-data/rankall.R')
source('/media/Documents/Coursera/datasciencecoursera/rprog-data-ProgAssignment3-data/rankall.R')
head(rankall("heart attack", "best"), 10)
source('/media/Documents/Coursera/datasciencecoursera/rprog-data-ProgAssignment3-data/rankall.R')
source('/media/Documents/Coursera/datasciencecoursera/rprog-data-ProgAssignment3-data/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
tail(rankall("heart failure"), 10)
head(rankall("heart attack", 20), 10)
source('/media/Documents/Coursera/datasciencecoursera/rprog-data-ProgAssignment3-data/rankall.R')
head(rankall("heart attack", 20), 10)
source('/media/Documents/Coursera/datasciencecoursera/rprog-data-ProgAssignment3-data/rankall.R')
head(rankall("heart attack", 20), 10)
submit()
source("rprog-scripts-submitscript3.R")
submit()
submit()
submit()
